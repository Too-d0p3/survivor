/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/tests": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of Test resources.
         * @description Retrieves the collection of Test resources.
         */
        get: operations["api_tests_get_collection"];
        put?: never;
        /**
         * Creates a Test resource.
         * @description Creates a Test resource.
         */
        post: operations["api_tests_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/tests/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a Test resource.
         * @description Retrieves a Test resource.
         */
        get: operations["api_tests_id_get"];
        put?: never;
        post?: never;
        /**
         * Removes the Test resource.
         * @description Removes the Test resource.
         */
        delete: operations["api_tests_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the Test resource.
         * @description Updates the Test resource.
         */
        patch: operations["api_tests_id_patch"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Unprocessable entity */
        "ConstraintViolation-json": {
            /**
             * @default 422
             * @example 422
             */
            status: number;
            violations?: {
                /** @description The property path of the violation */
                propertyPath?: string;
                /** @description The message associated with the violation */
                message?: string;
            }[];
            readonly detail?: string;
            readonly type?: string;
            readonly title?: string | null;
            readonly instance?: string | null;
        };
        /** @description Unprocessable entity */
        "ConstraintViolation.jsonld-jsonld": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            /**
             * @default 422
             * @example 422
             */
            status: number;
            violations?: {
                /** @description The property path of the violation */
                propertyPath?: string;
                /** @description The message associated with the violation */
                message?: string;
            }[];
            readonly detail?: string;
            readonly description?: string;
            readonly type?: string;
            readonly title?: string | null;
            readonly instance?: string | null;
        };
        /** @description A representation of common errors. */
        Error: {
            /** @description A short, human-readable summary of the problem. */
            readonly title?: string | null;
            /** @description A human-readable explanation specific to this occurrence of the problem. */
            readonly detail?: string | null;
            /**
             * @default 400
             * @example 404
             */
            status: number;
            /** @description A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. */
            readonly instance?: string | null;
            /** @description A URI reference that identifies the problem type */
            readonly type?: string;
        };
        /** @description A representation of common errors. */
        "Error.jsonld": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            /** @description A short, human-readable summary of the problem. */
            readonly title?: string | null;
            /** @description A human-readable explanation specific to this occurrence of the problem. */
            readonly detail?: string | null;
            /**
             * @default 400
             * @example 404
             */
            status: number;
            /** @description A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced. */
            readonly instance?: string | null;
            /** @description A URI reference that identifies the problem type */
            readonly type?: string;
            readonly description?: string | null;
        };
        Test: {
            readonly id?: number;
        };
        "Test.jsonld": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    api_tests_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Test collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["Test.jsonld"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                };
            };
        };
    };
    api_tests_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new Test resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["Test.jsonld"];
            };
        };
        responses: {
            /** @description Test resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Test.jsonld"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Error.jsonld"];
                    "application/problem+json": components["schemas"]["Error"];
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description An error occurred */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["ConstraintViolation.jsonld-jsonld"];
                    "application/problem+json": components["schemas"]["ConstraintViolation-json"];
                    "application/json": components["schemas"]["ConstraintViolation-json"];
                };
            };
        };
    };
    api_tests_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Test resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Test.jsonld"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Error.jsonld"];
                    "application/problem+json": components["schemas"]["Error"];
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    api_tests_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Test resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Error.jsonld"];
                    "application/problem+json": components["schemas"]["Error"];
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    api_tests_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Test identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated Test resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["Test"];
            };
        };
        responses: {
            /** @description Test resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Test.jsonld"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Error.jsonld"];
                    "application/problem+json": components["schemas"]["Error"];
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Error.jsonld"];
                    "application/problem+json": components["schemas"]["Error"];
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description An error occurred */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["ConstraintViolation.jsonld-jsonld"];
                    "application/problem+json": components["schemas"]["ConstraintViolation-json"];
                    "application/json": components["schemas"]["ConstraintViolation-json"];
                };
            };
        };
    };
}
