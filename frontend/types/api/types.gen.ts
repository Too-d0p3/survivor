// This file is auto-generated by @hey-api/openapi-ts

export type AiLogReadable = {
    readonly id?: number;
    readonly createdAt?: string;
    modelName?: string;
    apiUrl?: string | null;
    actionName?: string | null;
    userPrompt?: string | null;
    systemPrompt?: string | null;
    requestJson?: string | null;
    responseJson?: string | null;
    returnContent?: string | null;
    duration?: number | null;
};

export type AiLogWritable = {
    modelName?: string;
    apiUrl?: string | null;
    actionName?: string | null;
    userPrompt?: string | null;
    systemPrompt?: string | null;
    requestJson?: string | null;
    responseJson?: string | null;
    returnContent?: string | null;
    duration?: number | null;
};

export type AiLogJsonldReadable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    readonly createdAt?: string;
    modelName?: string;
    apiUrl?: string | null;
    actionName?: string | null;
    userPrompt?: string | null;
    systemPrompt?: string | null;
    requestJson?: string | null;
    responseJson?: string | null;
    returnContent?: string | null;
    duration?: number | null;
};

export type AiLogJsonldWritable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    modelName?: string;
    apiUrl?: string | null;
    actionName?: string | null;
    userPrompt?: string | null;
    systemPrompt?: string | null;
    requestJson?: string | null;
    responseJson?: string | null;
    returnContent?: string | null;
    duration?: number | null;
};

/**
 * Unprocessable entity
 */
export type ConstraintViolationJsonReadable = {
    status?: number;
    violations?: Array<{
        /**
         * The property path of the violation
         */
        propertyPath?: string;
        /**
         * The message associated with the violation
         */
        message?: string;
    }>;
    readonly detail?: string;
    readonly type?: string;
    readonly title?: string | null;
    readonly instance?: string | null;
};

/**
 * Unprocessable entity
 */
export type ConstraintViolationJsonWritable = {
    status?: number;
    violations?: Array<{
        /**
         * The property path of the violation
         */
        propertyPath?: string;
        /**
         * The message associated with the violation
         */
        message?: string;
    }>;
};

/**
 * Unprocessable entity
 */
export type ConstraintViolationJsonldJsonldReadable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    status?: number;
    violations?: Array<{
        /**
         * The property path of the violation
         */
        propertyPath?: string;
        /**
         * The message associated with the violation
         */
        message?: string;
    }>;
    readonly detail?: string;
    readonly description?: string;
    readonly type?: string;
    readonly title?: string | null;
    readonly instance?: string | null;
};

/**
 * Unprocessable entity
 */
export type ConstraintViolationJsonldJsonldWritable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    status?: number;
    violations?: Array<{
        /**
         * The property path of the violation
         */
        propertyPath?: string;
        /**
         * The message associated with the violation
         */
        message?: string;
    }>;
};

/**
 * A representation of common errors.
 */
export type ErrorReadable = {
    /**
     * A short, human-readable summary of the problem.
     */
    readonly title?: string | null;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    readonly detail?: string | null;
    status?: number;
    /**
     * A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
     */
    readonly instance?: string | null;
    /**
     * A URI reference that identifies the problem type
     */
    readonly type?: string;
};

/**
 * A representation of common errors.
 */
export type ErrorWritable = {
    status?: number;
};

/**
 * A representation of common errors.
 */
export type ErrorJsonldReadable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    /**
     * A short, human-readable summary of the problem.
     */
    readonly title?: string | null;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    readonly detail?: string | null;
    status?: number;
    /**
     * A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
     */
    readonly instance?: string | null;
    /**
     * A URI reference that identifies the problem type
     */
    readonly type?: string;
    readonly description?: string | null;
};

/**
 * A representation of common errors.
 */
export type ErrorJsonldWritable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    status?: number;
};

export type GameReadable = {
    readonly id?: number;
    readonly createdAt?: string;
    isSandbox?: boolean;
    players?: Array<string>;
    owner?: string;
};

export type GameWritable = {
    isSandbox?: boolean;
    players?: Array<string>;
    owner?: string;
};

export type GameJsonldReadable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    readonly createdAt?: string;
    isSandbox?: boolean;
    players?: Array<string>;
    owner?: string;
};

export type GameJsonldWritable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    isSandbox?: boolean;
    players?: Array<string>;
    owner?: string;
};

export type PlayerReadable = {
    readonly id?: number;
    name?: string;
    isUserControlled?: boolean;
    description?: string | null;
    game?: string;
    playerTraits?: Array<string>;
};

export type PlayerWritable = {
    name?: string;
    isUserControlled?: boolean;
    description?: string | null;
    game?: string;
    playerTraits?: Array<string>;
};

export type PlayerJsonldReadable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    name?: string;
    isUserControlled?: boolean;
    description?: string | null;
    game?: string;
    playerTraits?: Array<string>;
};

export type PlayerJsonldWritable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    name?: string;
    isUserControlled?: boolean;
    description?: string | null;
    game?: string;
    playerTraits?: Array<string>;
};

export type PlayerTraitReadable = {
    readonly id?: number;
    player?: string;
    traitDef?: string;
    strength: string;
};

export type PlayerTraitWritable = {
    player?: string;
    traitDef?: string;
    strength: string;
};

export type PlayerTraitJsonldReadable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    player?: string;
    traitDef?: string;
    strength: string;
};

export type PlayerTraitJsonldWritable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    player?: string;
    traitDef?: string;
    strength: string;
};

export type TraitDefReadable = {
    readonly id?: number;
    key: string;
    label: string;
    description?: string | null;
    type: 'social' | 'strategic' | 'emotional' | 'physical';
    playerTraits?: Array<string>;
};

export type TraitDefWritable = {
    key: string;
    label: string;
    description?: string | null;
    type: 'social' | 'strategic' | 'emotional' | 'physical';
    playerTraits?: Array<string>;
};

export type TraitDefJsonldReadable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    key: string;
    label: string;
    description?: string | null;
    type: 'social' | 'strategic' | 'emotional' | 'physical';
    playerTraits?: Array<string>;
};

export type TraitDefJsonldWritable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    key: string;
    label: string;
    description?: string | null;
    type: 'social' | 'strategic' | 'emotional' | 'physical';
    playerTraits?: Array<string>;
};

export type UserReadable = {
    readonly id?: number;
    email?: string;
    roles?: Array<string>;
    password?: string;
    games?: Array<string>;
    readonly userIdentifier?: string;
};

export type UserWritable = {
    email?: string;
    roles?: Array<string>;
    password?: string;
    games?: Array<string>;
};

export type UserJsonldReadable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    email?: string;
    roles?: Array<string>;
    password?: string;
    games?: Array<string>;
    readonly userIdentifier?: string;
};

export type UserJsonldWritable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    email?: string;
    roles?: Array<string>;
    password?: string;
    games?: Array<string>;
};

export type UserJsonldUserReadReadable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    email?: string;
    roles?: Array<string>;
};

export type UserJsonldUserReadWritable = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    email?: string;
    roles?: Array<string>;
};

export type ApiAiLogsGetCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
    };
    url: '/api/ai_logs';
};

export type ApiAiLogsGetCollectionResponses = {
    /**
     * AiLog collection
     */
    200: {
        member: Array<AiLogJsonldReadable>;
        totalItems?: number;
        view?: {
            '@id'?: string;
            '@type'?: string;
            first?: string;
            last?: string;
            previous?: string;
            next?: string;
        };
        search?: {
            '@type'?: string;
            template?: string;
            variableRepresentation?: string;
            mapping?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type ApiAiLogsGetCollectionResponse = ApiAiLogsGetCollectionResponses[keyof ApiAiLogsGetCollectionResponses];

export type ApiAiLogsPostData = {
    /**
     * The new AiLog resource
     */
    body: AiLogJsonldWritable;
    path?: never;
    query?: never;
    url: '/api/ai_logs';
};

export type ApiAiLogsPostErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiAiLogsPostError = ApiAiLogsPostErrors[keyof ApiAiLogsPostErrors];

export type ApiAiLogsPostResponses = {
    /**
     * AiLog resource created
     */
    201: AiLogJsonldReadable;
};

export type ApiAiLogsPostResponse = ApiAiLogsPostResponses[keyof ApiAiLogsPostResponses];

export type ApiAiLogsIdDeleteData = {
    body?: never;
    path: {
        /**
         * AiLog identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/ai_logs/{id}';
};

export type ApiAiLogsIdDeleteErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiAiLogsIdDeleteError = ApiAiLogsIdDeleteErrors[keyof ApiAiLogsIdDeleteErrors];

export type ApiAiLogsIdDeleteResponses = {
    /**
     * AiLog resource deleted
     */
    204: void;
};

export type ApiAiLogsIdDeleteResponse = ApiAiLogsIdDeleteResponses[keyof ApiAiLogsIdDeleteResponses];

export type ApiAiLogsIdGetData = {
    body?: never;
    path: {
        /**
         * AiLog identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/ai_logs/{id}';
};

export type ApiAiLogsIdGetErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiAiLogsIdGetError = ApiAiLogsIdGetErrors[keyof ApiAiLogsIdGetErrors];

export type ApiAiLogsIdGetResponses = {
    /**
     * AiLog resource
     */
    200: AiLogJsonldReadable;
};

export type ApiAiLogsIdGetResponse = ApiAiLogsIdGetResponses[keyof ApiAiLogsIdGetResponses];

export type ApiAiLogsIdPatchData = {
    /**
     * The updated AiLog resource
     */
    body: AiLogWritable;
    path: {
        /**
         * AiLog identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/ai_logs/{id}';
};

export type ApiAiLogsIdPatchErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiAiLogsIdPatchError = ApiAiLogsIdPatchErrors[keyof ApiAiLogsIdPatchErrors];

export type ApiAiLogsIdPatchResponses = {
    /**
     * AiLog resource updated
     */
    200: AiLogJsonldReadable;
};

export type ApiAiLogsIdPatchResponse = ApiAiLogsIdPatchResponses[keyof ApiAiLogsIdPatchResponses];

export type ApiGamesGetCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
    };
    url: '/api/games';
};

export type ApiGamesGetCollectionResponses = {
    /**
     * Game collection
     */
    200: {
        member: Array<GameJsonldReadable>;
        totalItems?: number;
        view?: {
            '@id'?: string;
            '@type'?: string;
            first?: string;
            last?: string;
            previous?: string;
            next?: string;
        };
        search?: {
            '@type'?: string;
            template?: string;
            variableRepresentation?: string;
            mapping?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type ApiGamesGetCollectionResponse = ApiGamesGetCollectionResponses[keyof ApiGamesGetCollectionResponses];

export type ApiGamesPostData = {
    /**
     * The new Game resource
     */
    body: GameJsonldWritable;
    path?: never;
    query?: never;
    url: '/api/games';
};

export type ApiGamesPostErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiGamesPostError = ApiGamesPostErrors[keyof ApiGamesPostErrors];

export type ApiGamesPostResponses = {
    /**
     * Game resource created
     */
    201: GameJsonldReadable;
};

export type ApiGamesPostResponse = ApiGamesPostResponses[keyof ApiGamesPostResponses];

export type ApiGamesIdDeleteData = {
    body?: never;
    path: {
        /**
         * Game identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/games/{id}';
};

export type ApiGamesIdDeleteErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiGamesIdDeleteError = ApiGamesIdDeleteErrors[keyof ApiGamesIdDeleteErrors];

export type ApiGamesIdDeleteResponses = {
    /**
     * Game resource deleted
     */
    204: void;
};

export type ApiGamesIdDeleteResponse = ApiGamesIdDeleteResponses[keyof ApiGamesIdDeleteResponses];

export type ApiGamesIdGetData = {
    body?: never;
    path: {
        /**
         * Game identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/games/{id}';
};

export type ApiGamesIdGetErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiGamesIdGetError = ApiGamesIdGetErrors[keyof ApiGamesIdGetErrors];

export type ApiGamesIdGetResponses = {
    /**
     * Game resource
     */
    200: GameJsonldReadable;
};

export type ApiGamesIdGetResponse = ApiGamesIdGetResponses[keyof ApiGamesIdGetResponses];

export type ApiGamesIdPatchData = {
    /**
     * The updated Game resource
     */
    body: GameWritable;
    path: {
        /**
         * Game identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/games/{id}';
};

export type ApiGamesIdPatchErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiGamesIdPatchError = ApiGamesIdPatchErrors[keyof ApiGamesIdPatchErrors];

export type ApiGamesIdPatchResponses = {
    /**
     * Game resource updated
     */
    200: GameJsonldReadable;
};

export type ApiGamesIdPatchResponse = ApiGamesIdPatchResponses[keyof ApiGamesIdPatchResponses];

export type LoginCheckPostData = {
    /**
     * The login data
     */
    body: {
        email: string;
        password: string;
    };
    path?: never;
    query?: never;
    url: '/api/login';
};

export type LoginCheckPostResponses = {
    /**
     * User token created
     */
    200: {
        readonly token: string;
    };
};

export type LoginCheckPostResponse = LoginCheckPostResponses[keyof LoginCheckPostResponses];

export type ApiPlayersGetCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
    };
    url: '/api/players';
};

export type ApiPlayersGetCollectionResponses = {
    /**
     * Player collection
     */
    200: {
        member: Array<PlayerJsonldReadable>;
        totalItems?: number;
        view?: {
            '@id'?: string;
            '@type'?: string;
            first?: string;
            last?: string;
            previous?: string;
            next?: string;
        };
        search?: {
            '@type'?: string;
            template?: string;
            variableRepresentation?: string;
            mapping?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type ApiPlayersGetCollectionResponse = ApiPlayersGetCollectionResponses[keyof ApiPlayersGetCollectionResponses];

export type ApiPlayersPostData = {
    /**
     * The new Player resource
     */
    body: PlayerJsonldWritable;
    path?: never;
    query?: never;
    url: '/api/players';
};

export type ApiPlayersPostErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiPlayersPostError = ApiPlayersPostErrors[keyof ApiPlayersPostErrors];

export type ApiPlayersPostResponses = {
    /**
     * Player resource created
     */
    201: PlayerJsonldReadable;
};

export type ApiPlayersPostResponse = ApiPlayersPostResponses[keyof ApiPlayersPostResponses];

export type ApiPlayersIdDeleteData = {
    body?: never;
    path: {
        /**
         * Player identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/players/{id}';
};

export type ApiPlayersIdDeleteErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiPlayersIdDeleteError = ApiPlayersIdDeleteErrors[keyof ApiPlayersIdDeleteErrors];

export type ApiPlayersIdDeleteResponses = {
    /**
     * Player resource deleted
     */
    204: void;
};

export type ApiPlayersIdDeleteResponse = ApiPlayersIdDeleteResponses[keyof ApiPlayersIdDeleteResponses];

export type ApiPlayersIdGetData = {
    body?: never;
    path: {
        /**
         * Player identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/players/{id}';
};

export type ApiPlayersIdGetErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiPlayersIdGetError = ApiPlayersIdGetErrors[keyof ApiPlayersIdGetErrors];

export type ApiPlayersIdGetResponses = {
    /**
     * Player resource
     */
    200: PlayerJsonldReadable;
};

export type ApiPlayersIdGetResponse = ApiPlayersIdGetResponses[keyof ApiPlayersIdGetResponses];

export type ApiPlayersIdPatchData = {
    /**
     * The updated Player resource
     */
    body: PlayerWritable;
    path: {
        /**
         * Player identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/players/{id}';
};

export type ApiPlayersIdPatchErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiPlayersIdPatchError = ApiPlayersIdPatchErrors[keyof ApiPlayersIdPatchErrors];

export type ApiPlayersIdPatchResponses = {
    /**
     * Player resource updated
     */
    200: PlayerJsonldReadable;
};

export type ApiPlayersIdPatchResponse = ApiPlayersIdPatchResponses[keyof ApiPlayersIdPatchResponses];

export type ApiPlayerTraitsGetCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
    };
    url: '/api/player_traits';
};

export type ApiPlayerTraitsGetCollectionResponses = {
    /**
     * PlayerTrait collection
     */
    200: {
        member: Array<PlayerTraitJsonldReadable>;
        totalItems?: number;
        view?: {
            '@id'?: string;
            '@type'?: string;
            first?: string;
            last?: string;
            previous?: string;
            next?: string;
        };
        search?: {
            '@type'?: string;
            template?: string;
            variableRepresentation?: string;
            mapping?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type ApiPlayerTraitsGetCollectionResponse = ApiPlayerTraitsGetCollectionResponses[keyof ApiPlayerTraitsGetCollectionResponses];

export type ApiPlayerTraitsPostData = {
    /**
     * The new PlayerTrait resource
     */
    body: PlayerTraitJsonldWritable;
    path?: never;
    query?: never;
    url: '/api/player_traits';
};

export type ApiPlayerTraitsPostErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiPlayerTraitsPostError = ApiPlayerTraitsPostErrors[keyof ApiPlayerTraitsPostErrors];

export type ApiPlayerTraitsPostResponses = {
    /**
     * PlayerTrait resource created
     */
    201: PlayerTraitJsonldReadable;
};

export type ApiPlayerTraitsPostResponse = ApiPlayerTraitsPostResponses[keyof ApiPlayerTraitsPostResponses];

export type ApiPlayerTraitsIdDeleteData = {
    body?: never;
    path: {
        /**
         * PlayerTrait identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/player_traits/{id}';
};

export type ApiPlayerTraitsIdDeleteErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiPlayerTraitsIdDeleteError = ApiPlayerTraitsIdDeleteErrors[keyof ApiPlayerTraitsIdDeleteErrors];

export type ApiPlayerTraitsIdDeleteResponses = {
    /**
     * PlayerTrait resource deleted
     */
    204: void;
};

export type ApiPlayerTraitsIdDeleteResponse = ApiPlayerTraitsIdDeleteResponses[keyof ApiPlayerTraitsIdDeleteResponses];

export type ApiPlayerTraitsIdGetData = {
    body?: never;
    path: {
        /**
         * PlayerTrait identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/player_traits/{id}';
};

export type ApiPlayerTraitsIdGetErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiPlayerTraitsIdGetError = ApiPlayerTraitsIdGetErrors[keyof ApiPlayerTraitsIdGetErrors];

export type ApiPlayerTraitsIdGetResponses = {
    /**
     * PlayerTrait resource
     */
    200: PlayerTraitJsonldReadable;
};

export type ApiPlayerTraitsIdGetResponse = ApiPlayerTraitsIdGetResponses[keyof ApiPlayerTraitsIdGetResponses];

export type ApiPlayerTraitsIdPatchData = {
    /**
     * The updated PlayerTrait resource
     */
    body: PlayerTraitWritable;
    path: {
        /**
         * PlayerTrait identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/player_traits/{id}';
};

export type ApiPlayerTraitsIdPatchErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiPlayerTraitsIdPatchError = ApiPlayerTraitsIdPatchErrors[keyof ApiPlayerTraitsIdPatchErrors];

export type ApiPlayerTraitsIdPatchResponses = {
    /**
     * PlayerTrait resource updated
     */
    200: PlayerTraitJsonldReadable;
};

export type ApiPlayerTraitsIdPatchResponse = ApiPlayerTraitsIdPatchResponses[keyof ApiPlayerTraitsIdPatchResponses];

export type ApiTraitDefsGetCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
    };
    url: '/api/trait_defs';
};

export type ApiTraitDefsGetCollectionResponses = {
    /**
     * TraitDef collection
     */
    200: {
        member: Array<TraitDefJsonldReadable>;
        totalItems?: number;
        view?: {
            '@id'?: string;
            '@type'?: string;
            first?: string;
            last?: string;
            previous?: string;
            next?: string;
        };
        search?: {
            '@type'?: string;
            template?: string;
            variableRepresentation?: string;
            mapping?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type ApiTraitDefsGetCollectionResponse = ApiTraitDefsGetCollectionResponses[keyof ApiTraitDefsGetCollectionResponses];

export type ApiTraitDefsPostData = {
    /**
     * The new TraitDef resource
     */
    body: TraitDefJsonldWritable;
    path?: never;
    query?: never;
    url: '/api/trait_defs';
};

export type ApiTraitDefsPostErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiTraitDefsPostError = ApiTraitDefsPostErrors[keyof ApiTraitDefsPostErrors];

export type ApiTraitDefsPostResponses = {
    /**
     * TraitDef resource created
     */
    201: TraitDefJsonldReadable;
};

export type ApiTraitDefsPostResponse = ApiTraitDefsPostResponses[keyof ApiTraitDefsPostResponses];

export type ApiTraitDefsIdDeleteData = {
    body?: never;
    path: {
        /**
         * TraitDef identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/trait_defs/{id}';
};

export type ApiTraitDefsIdDeleteErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiTraitDefsIdDeleteError = ApiTraitDefsIdDeleteErrors[keyof ApiTraitDefsIdDeleteErrors];

export type ApiTraitDefsIdDeleteResponses = {
    /**
     * TraitDef resource deleted
     */
    204: void;
};

export type ApiTraitDefsIdDeleteResponse = ApiTraitDefsIdDeleteResponses[keyof ApiTraitDefsIdDeleteResponses];

export type ApiTraitDefsIdGetData = {
    body?: never;
    path: {
        /**
         * TraitDef identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/trait_defs/{id}';
};

export type ApiTraitDefsIdGetErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiTraitDefsIdGetError = ApiTraitDefsIdGetErrors[keyof ApiTraitDefsIdGetErrors];

export type ApiTraitDefsIdGetResponses = {
    /**
     * TraitDef resource
     */
    200: TraitDefJsonldReadable;
};

export type ApiTraitDefsIdGetResponse = ApiTraitDefsIdGetResponses[keyof ApiTraitDefsIdGetResponses];

export type ApiTraitDefsIdPatchData = {
    /**
     * The updated TraitDef resource
     */
    body: TraitDefWritable;
    path: {
        /**
         * TraitDef identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/trait_defs/{id}';
};

export type ApiTraitDefsIdPatchErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiTraitDefsIdPatchError = ApiTraitDefsIdPatchErrors[keyof ApiTraitDefsIdPatchErrors];

export type ApiTraitDefsIdPatchResponses = {
    /**
     * TraitDef resource updated
     */
    200: TraitDefJsonldReadable;
};

export type ApiTraitDefsIdPatchResponse = ApiTraitDefsIdPatchResponses[keyof ApiTraitDefsIdPatchResponses];

export type GetCurrentUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user/me';
};

export type GetCurrentUserErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type GetCurrentUserError = GetCurrentUserErrors[keyof GetCurrentUserErrors];

export type GetCurrentUserResponses = {
    /**
     * User resource
     */
    200: UserJsonldUserReadReadable;
};

export type GetCurrentUserResponse = GetCurrentUserResponses[keyof GetCurrentUserResponses];

export type ApiUsersGetCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
    };
    url: '/api/users';
};

export type ApiUsersGetCollectionResponses = {
    /**
     * User collection
     */
    200: {
        member: Array<UserJsonldReadable>;
        totalItems?: number;
        view?: {
            '@id'?: string;
            '@type'?: string;
            first?: string;
            last?: string;
            previous?: string;
            next?: string;
        };
        search?: {
            '@type'?: string;
            template?: string;
            variableRepresentation?: string;
            mapping?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type ApiUsersGetCollectionResponse = ApiUsersGetCollectionResponses[keyof ApiUsersGetCollectionResponses];

export type ApiUsersPostData = {
    /**
     * The new User resource
     */
    body: UserJsonldWritable;
    path?: never;
    query?: never;
    url: '/api/users';
};

export type ApiUsersPostErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiUsersPostError = ApiUsersPostErrors[keyof ApiUsersPostErrors];

export type ApiUsersPostResponses = {
    /**
     * User resource created
     */
    201: UserJsonldReadable;
};

export type ApiUsersPostResponse = ApiUsersPostResponses[keyof ApiUsersPostResponses];

export type ApiUsersIdDeleteData = {
    body?: never;
    path: {
        /**
         * User identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/users/{id}';
};

export type ApiUsersIdDeleteErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiUsersIdDeleteError = ApiUsersIdDeleteErrors[keyof ApiUsersIdDeleteErrors];

export type ApiUsersIdDeleteResponses = {
    /**
     * User resource deleted
     */
    204: void;
};

export type ApiUsersIdDeleteResponse = ApiUsersIdDeleteResponses[keyof ApiUsersIdDeleteResponses];

export type ApiUsersIdGetData = {
    body?: never;
    path: {
        /**
         * User identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/users/{id}';
};

export type ApiUsersIdGetErrors = {
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
};

export type ApiUsersIdGetError = ApiUsersIdGetErrors[keyof ApiUsersIdGetErrors];

export type ApiUsersIdGetResponses = {
    /**
     * User resource
     */
    200: UserJsonldReadable;
};

export type ApiUsersIdGetResponse = ApiUsersIdGetResponses[keyof ApiUsersIdGetResponses];

export type ApiUsersIdPatchData = {
    /**
     * The updated User resource
     */
    body: UserWritable;
    path: {
        /**
         * User identifier
         */
        id: string;
    };
    query?: never;
    url: '/api/users/{id}';
};

export type ApiUsersIdPatchErrors = {
    /**
     * Invalid input
     */
    400: ErrorJsonldReadable;
    /**
     * Not found
     */
    404: ErrorJsonldReadable;
    /**
     * An error occurred
     */
    422: ConstraintViolationJsonldJsonldReadable;
};

export type ApiUsersIdPatchError = ApiUsersIdPatchErrors[keyof ApiUsersIdPatchErrors];

export type ApiUsersIdPatchResponses = {
    /**
     * User resource updated
     */
    200: UserJsonldReadable;
};

export type ApiUsersIdPatchResponse = ApiUsersIdPatchResponses[keyof ApiUsersIdPatchResponses];

export type ClientOptions = {
    baseURL: `${string}://${string}` | (string & {});
};